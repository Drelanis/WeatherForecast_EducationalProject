generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int          @id @default(autoincrement())
  firstName String       @map("first_name")
  lastName  String       @map("last_name")
  email     String       @unique
  password  String
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @default(now()) @map("updated_at")
  cities    UserToCity[]
}

model City {
  id        Int          @id @default(autoincrement())
  name      String
  country   String
  longitude Float
  latitude  Float
  users     UserToCity[]
  weather   Weather?
}

model UserToCity {
  userId Int  @unique @map("user_id")
  user   User @relation(fields: [userId], references: [id])

  cityId Int  @unique @map("city_id")
  city   City @relation(fields: [cityId], references: [id])

  @@id([userId, cityId])
}

model Weather {
  id              Int               @id @default(autoincrement())
  cityId          Int               @unique @map("city_id")
  city            City              @relation(fields: [cityId], references: [id])
  currentWeather  Current_weather?
  forecastWeather Forecast_weather?
}

model Current_weather {
  id             Int      @id @default(autoincrement())

  weatherId      Int      @unique @map("weather_id")
  weather        Weather  @relation(fields: [weatherId], references: [id])

  updatedAt      DateTime @default(now()) @map("updated_at")
  currentWeather Json     @map("current_weather")
}

model Forecast_weather {
  id              Int      @id @default(autoincrement())

  weatherId       Int      @unique @map("weather_id")
  weather         Weather  @relation(fields: [weatherId], references: [id])
  
  updatedAt       DateTime @default(now()) @map("updated_at")
  forecastWeather Json     @map("forecast_weather")
}

