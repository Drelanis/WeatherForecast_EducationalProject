generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

generator erd {
  provider = "prisma-erd-generator"
  output = "../prisma/ERD.png"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(uuid())
  email     String       @unique
  firstName String       @map("first_name")
  lastName  String       @map("last_name")
  password  String
  cities    City[]
  token     Token[]
}


model City {
  id        Int          @id @unique
  name      String
  country   String
  longitude Float
  latitude  Float
  users     User[]
  weather   Weather?
}


model Token {
  id        String   @id @default(uuid())
  token     String   
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  userAgent String   @map("user_agent")
}

model Weather {
  id              Int               @id @default(autoincrement())
  cityId          Int               @unique @map("city_id")
  city            City              @relation(fields: [cityId], references: [id])
  currentWeather  Current_weather?
  forecastWeather Forecast_weather?
}

model Current_weather {
  id             Int      @id @default(autoincrement())

  weatherId      Int      @unique @map("weather_id")
  weather        Weather  @relation(fields: [weatherId], references: [id])

  updatedAt      DateTime @default(now()) @map("updated_at")
  currentWeather Json     @map("current_weather")
}

model Forecast_weather {
  id              Int      @id @default(autoincrement())

  weatherId       Int      @unique @map("weather_id")
  weather         Weather  @relation(fields: [weatherId], references: [id])
  
  updatedAt       DateTime @default(now()) @map("updated_at")
  forecastWeather Json     @map("forecast_weather")
}

